burp intruder

- Burp Suite's Intruder module is a powerful tool that allows for automated and customisable attacks.
- provides the ability to modify specific parts of a request and perform repetitive tests with variations of input data
- Intruder is particularly useful for tasks like fuzzing and brute-forcing, where different values need to be tested against a target.

- Intruder's functionality is comparable to command-line tools like Wfuzz or ffuf.

burp community edition = rate limited reduced speed
burp professional = faster

- can be filled with info when capturing a request and pressing ctrl + I or send to intruder by right clicking from proxy
--------------------------------

4 sub tabs in intruder
- Positions: This tab allows us to select an attack type (which we will cover in a future task) and configure where we want to insert our payloads in the request template.
- Payloads: Here we can select values to insert into the positions defined in the Positions tab. We have various payload options, such as loading items from a wordlist. The way these payloads are inserted into the template depends on the attack type chosen in the Positions tab. The Payloads tab also enables us to modify Intruder's behavior regarding payloads, such as defining pre-processing rules for each payload (e.g., adding a prefix or suffix, performing match and replace, or skipping payloads based on a defined regex).
- Resource Pool: This tab is not particularly useful in the Burp Community Edition. It allows for resource allocation among various automated tasks in Burp Professional. Without access to these automated tasks, this tab is of limited importance.
- Settings: This tab allows us to configure attack behavior. It primarily deals with how Burp handles results and the attack itself. For instance, we can flag requests containing specific text or define Burp's response to redirect (3xx) responses.

fuzzing =  the process of testing functionality or existence by applying a set of data to a parameter
-----------------

- First step when performing an attack in intruder tab, is to examine the positions in the request, where we insert our payload
- position = informs intruder the locations where the payload will be introduced 

highlighted in green are the auto attempts to find the most probable position where payload can be added

- The Add § button allows us to define new positions manually by highlighting them within the request editor and then clicking the button.
- The Clear § button removes all defined positions, providing a blank canvas where we can define our own positions.
- The Auto § button automatically attempts to identify the most likely positions based on the request. This feature is helpful if we previously cleared the default positions and want them back.

#####################################################33
Payloads = we can create, assign, and configure payloads for our attack

divided into 4 sections
1. Payload Sets:
	- This section allows us to choose the position for which we want to configure a payload set and select the type of payload we want to use.
	- When using attack types that allow only a single payload set (Sniper or Battering Ram), the "Payload Set" dropdown will have only one option, regardless of the number of defined positions.
	- If we use attack types that require multiple payload sets (Pitchfork or Cluster Bomb), there will be one item in the dropdown for each position.
	- Note: When assigning numbers in the "Payload Set" dropdown for multiple positions, follow a top-to-bottom, left-to-right order. For example, with two positions (username=§pentester§&password=§Expl01ted§), the first item in the payload set dropdown would refer to the username field, and the second item would refer to the password field.
2. Payload settings:
	- This section provides options specific to the selected payload type for the current payload set.
	- For example, when using the "Simple list" payload type, we can manually add or remove payloads to/from the set using the Add text box, Paste lines, or Load payloads from a file. The Remove button removes the currently selected line, and the Clear button clears the entire list. Be cautious with loading huge lists, as it may cause Burp to crash.
	- Each payload type will have its own set of options and functionality. Explore the options available to understand the range of possibilities.
3. Payload Processing:
	- In this section, we can define rules to be applied to each payload in the set before it is sent to the target.
	- For example, we can capitalize every word, skip payloads that match a regex pattern, or apply other transformations or filtering.
	- While you may not use this section frequently, it can be highly valuable when specific payload processing is required for your attack.
4. Payload Encoding:
	- The section allows us to customize the encoding options for our payloads.
	- By default, Burp Suite applies URL encoding to ensure the safe transmission of payloads. However, there may be cases where we want to adjust the encoding behavior.
	- We can override the default URL encoding options by modifying the list of characters to be encoded or unchecking the "URL-encode these characters" checkbox.
------------------------------------------------#####
there are 4 attack types in intruder of the position tab

- Sniper: The Sniper attack type is the default and most commonly used option. It cycles through the payloads, inserting one payload at a time into each position defined in the request. Sniper attacks iterate through all the payloads in a linear fashion, allowing for precise and focused testing.

- Battering ram: The Battering ram attack type differs from Sniper in that it sends all payloads simultaneously, each payload inserted into its respective position. This attack type is useful when testing for race conditions or when payloads need to be sent concurrently.

- Pitchfork: The Pitchfork attack type enables the simultaneous testing of multiple positions with different payloads. It allows the tester to define multiple payload sets, each associated with a specific position in the request. Pitchfork attacks are effective when there are distinct parameters that need separate testing.

- Cluster bomb: The Cluster bomb attack type combines the Sniper and Pitchfork approaches. It performs a Sniper-like attack on each position but simultaneously tests all payloads from each set. This attack type is useful when multiple positions have different payloads, and we want to test them all together.
---------------------------------

- Sniper = particularly effective for single-position attacks, such as password brute-force or fuzzing for API endpoints
- we provide a set of payloads, which can be a wordlist or a range of numbers, and Intruder inserts each payload into each defined position in the request.
- The total number of requests made by Intruder Sniper can be calculated as requests = numberOfWords * numberOfPositions.
EX:
1	username=burp&password=Expl01ted
2	username=suite&password=Expl01ted
3	username=intruder&password=Expl01ted
4	username=pentester&password=burp
5	username=pentester&password=suite
6	username=pentester&password=intruder
######################################################
- Bsttering ram =  it places the same payload in every position simultaneously, rather than substituting each payload into each position in turn.
EX:
1	username=burp&password=burp
2	username=suite&password=suite
3	username=intruder&password=intruder
########################################################3
- Pitchfork = While Sniper uses one payload set to test all positions simultaneously, Pitchfork utilises one payload set per position (up to a maximum of 20) and iterates through them all simultaneously.

1	username=joel&password=J03l
2	username=harriet&password=Emma1815
3	username=alex&password=Sk1ll

- It's important to note that Intruder stops testing as soon as one of the lists is complete. 
- Therefore, in Pitchfork attacks, it is ideal for the payload sets to have the same length. If the lengths of the payload sets differ, Intruder will only make requests until the shorter list is exhausted, and the remaining items in the longer list will not be teste
########3###################################################3
- Clusterbomb = allows us to choose multiple payload sets, one per position (up to a maximum of 20). 
- Unlike Pitchfork, where all payload sets are tested simultaneously, Cluster bomb iterates through each payload set individually, ensuring that every possible combination of payloads is tested.

1	username=joel&password=J03l
2	username=harriet&password=J03l
3	username=alex&password=J03l
4	username=joel&password=Emma1815
5	username=harriet&password=Emma1815
6	username=alex&password=Emma1815
7	username=joel&password=Sk1ll
8	username=harriet&password=Sk1ll
9	username=alex&password=Sk1ll

- Cluster bomb attacks can generate a significant amount of traffic as it tests every combination. 
- The number of requests made by a Cluster bomb attack can be calculated by multiplying the number of lines in each payload set together.
---------------------------------------------------------
practice challenge pitchfork

Goal: Find valid user and pass

- downloaded list of user and pass
- captured request on attempt to login
- send to intruder

position tab:
- pick pitchfork
- highlight user and pass

payload tab:
- set 1 = user
	loaded the user file
- set 2 = pass
	loaded the pass file
start attack			look at the length and inputted the pass and user with short length
------------------------------------------------
we log in

Goal: find valid id number outside of user account

- the content displayed shows tickets and each ticket has its on webpage with an endpoint of a number
- capture the request of one of the webpages
- send to intruder
- sniper 
- position = highlight id number endpoint
- payload type use numbers 0-100
- look up the endpoint with the 200 status code
flag found
--------------------------------------------------------
Macros allow us to perform the same set of actions repeatedly. In this case, we simply want to send a GET request to /admin/login/.

- In the "URL Scope" section, choose "Use suite scope"; this will set the macro to only operate on sites that have been added to the global scope


- to much info review module if need help

- capature request 
- highlight pass user
- pitchfork
- add file user pass
- settings main add rules and run macro
- once complete go intruder start attack
- find short length like last time credential have been found.














