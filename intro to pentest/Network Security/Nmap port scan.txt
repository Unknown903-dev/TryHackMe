Nmap Basic port scans

- will be checking which ports are open and listening and which are closed
- TCP connect port scan, TCP SYN port scan, UDP port scan
------------------------------
- ip address = specifies a host on a network 
- tcp port / udp port = identify a network service running on that host 

- port is usually linked to a service using a certain port number
- EX: http server would bind to TCP port 80 by default, supports SSL/TLS, would listen on TCP port 443
- TCP ports 80 and 443 are the default ports for HTTP and HTTPS
- no more than one service can listen on any TCP or UDP port (on the same IP address).

can classify ports in 2 states 
1. Open port indicates that there is some service listening on that port.
2. Closed port indicates that there is no service listening on that port.

we need to consider firewall, 
like a port can be open, but firewall can block the packets

nmap has 6 states
- Open: indicates that a service is listening on the specified port.
- Closed: indicates that no service is listening on the specified port, although the port is accessible. By accessible, we mean that it is reachable and is not blocked by a firewall or other security appliances/programs.
- Filtered: means that Nmap cannot determine if the port is open or closed because the port is not accessible. This state is usually due to a firewall preventing Nmap from reaching that port. Nmap’s packets may be blocked from reaching the port; alternatively, the responses are blocked from reaching Nmap’s host.
- Unfiltered: means that Nmap cannot determine if the port is open or closed, although the port is accessible. This state is encountered when using an ACK scan -sA.
- Open|Filtered: This means that Nmap cannot determine whether the port is open or filtered.
- Closed|Filtered: This means that Nmap cannot decide whether a port is closed or filtered.

UDP port 53 by default = DNS
TCP port 22 by default = SSH
---------------------------------------------------------
- to understand difference between port scans we review the TCP header
  the header is the first 24 bytes of a tcp segment

when looking at the tcp header 
- the first row we have the source tcp port number and the destination port number 
- in secod and third row we have the sequence number and the acknowledgement number 


we need to focus on the flags that Nmap can set or unset
  Setting a flag bit means setting its value to 1. From left to right, the TCP header flags are
- URG: Urgent flag indicates that the urgent pointer filed is significant. The urgent pointer indicates that the incoming data is urgent, and that a TCP segment with the URG flag set is processed immediately without consideration of having to wait on previously sent TCP segments.
- ACK: Acknowledgement flag indicates that the acknowledgement number is significant. It is used to acknowledge the receipt of a TCP segment.
- PSH: Push flag asking TCP to pass the data to the application promptly.
- RST: Reset flag is used to reset the connection. Another device, such as a firewall, might send it to tear a TCP connection. This flag is also used when data is sent to a host and there is no service on the receiving end to answer.
- SYN: Synchronize flag is used to initiate a TCP 3-way handshake and synchronize sequence numbers with the other host. The sequence number should be set randomly during TCP connection establishment
- FIN: The sender has no more data to send.
------------------------------------------------------------------------------------------------------
- Tcp connnect scan works by completing the TCP 3 way hand shake
-  the client sends a TCP packet with SYN flag set, and the server responds with SYN/ACK if the port is open; finally, the client completes the 3-way handshake by sending an ACK.
- connection is torn when its state is confirmed by sending a RST/ACK

-sT  = can choose to run tcp connect scan 

nmap -sT target
- comp1 SYN to comp2
- comp2 SYN/ACK to comp1
- comp1 ACK comp2 
- comp1 RST/ACK comp2 
case: TCP port is open

- if not priviledge user a tcp connect scan is only possible option to discover open tcp ports 
- in wireshark = see nmap sending tcp packets with SYN flag set to various ports 256, 443, 143 etc...
- default nmap attempt to connect 1000 most common ports
- closed tcp port responds to SYN packet with RST/ACK to show it is not open
- repeat for all closed ports

-   -F = fast mode and decrease the number of scanned ports from 1000 to 100
most common ports


-   -r = add to scan the ports in consecutive order instead of random
	testing whether ports open in a consistent manner, for instance, when a target boots up.
--------------------------------------------------------------------
- unpriviledge user are limited to connect scan
	deafualt scan mode = SYN scan = requires a priviledge 
- SYN scan  = does not need to complete Tcp 3 way = the connection get teared down when it recieves a response from server
- if tcp connection is not established it decreases the chances of scan being logged
-     -sS

nmap -sS target
- comp1 SYN to comp2
- comp2 SYN/ACK to comp1
- comp1 RST to comp2
case: TCP port is open 

- The behaviour in the case of closed TCP ports is similar to that of the TCP connect scan
- TCP SYN scan is the defaut scan mode when running nmap as priviledge user
- successfully discovered the open ports you found earlier with the TCP connect scan, yet no TCP connection was fully established with the target.
-----------------------------------------------------------

- UDP is a connectionless protocol = it does not require any handshake for connection establishment
- cannot guarantee that a service listening on a UDP port would respond to our packets
- if a UDP packet is sent to a closed port, an ICMP port unreachable error (type 3, code 3) is returned
- -sU   = UDP scan, can also combine it with another TCP scan 
- sending UDP packet to open port wont tell us anything

---------------------------------
nmap -sU target
- comp1 UDP packet to comp2
Case:UDP port is open. No response is expected

- shows that if we send a UDP packet to an open UDP port, we cannot expect any reply in return. Therefore, sending a UDP packet to an open port won’t tell us anything.
--------------------------------
nmap -sU Target
- comp1 UDP packet to comp2 
- comp2 icmp type3 code3 to comp1
case: UDP port is closed. this leads to icmp destination unreachable (port unreachable)

- we expect to get an ICMP packet of type 3, destination unreachable, and code 3, port unreachable. In other words, the UDP ports that don’t generate any response are the ones that Nmap will state as open.
----------------------------------------------------------
-  -p22,80,443		= port list: will scan ports 22, 80 and 443.
-  -p1-1023 		= port range: will scan all ports between 1 and 1023 inclusive, while -p20-25 will scan ports between 20 and 25 inclusive.
-  -p- 			= request all ports,  scan all 65535 ports
-  -F			= common ports
-  --top-ports 10	= will check the ten most common ports
-  -T(0-5)		= control the scan timing 0 is the slowest 5 fast
			paranoid (0)  = avoid IDS alerts 0r 1 takes 5min for eack scan
			sneaky (1)    = real engagment, stealthy
			polite (2)
			normal (3)       = default
			aggressive (4)   = used for CTF and learning to practice
			insane (5)       = can affect the accuracy, increase of packet loss
-   --min-rate <number>   = --max-rate 10 or --max-rate=10 ensures that your scanner is not sending more than ten packets per second
    --max-rate <number>	  = control the packet rate

-    --min-parallelism <numprobes>   =  control probing parallelization
     --max-parallelism <numprobes>   = Nmap probes the targets to discover which hosts are live and which ports are open; 
					probing parallelization specifies the number of such probes that can be run in parallel. 
					For instance, --min-parallelism=512 pushes Nmap to maintain at least 512 probes in parallel; these 512 probes are related to host discovery and open ports.
----------------------------------------------------------------------
overall

TCP Connect Scan	nmap -sT 10.10.23.51
TCP SYN Scan		sudo nmap -sS 10.10.23.51
UDP Scan		sudo nmap -sU 10.10.23.51

-p-			all ports
-p1-1023		scan ports 1 to 1023
-F			100 most common ports
-r			scan ports in consecutive order
-T<0-5>			-T0 being the slowest and T5 the fastest
--max-rate 50		rate <= 50 packets/sec
--min-rate 15		rate >= 15 packets/sec
--min-parallelism 100	at least 100 probes in parallel
