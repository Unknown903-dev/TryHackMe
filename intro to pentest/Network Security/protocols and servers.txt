protocols and servers

telnet protocol = application layer = used to connect to a virtual terminal of another computer

- telnet allows a user to log into a comp and acces its termninal to run programs, start batch processes and perform system administration task remotley
- all comunication between the telnet client and the telnet server is not encrypted 
- telnet uses the telnet protocol for incoming connection on port 23


A user is connecting to the telnetd, a Telnet server. The steps are as follows:

- First, he is asked to provide his login name (username). We can see the user entering frank.
- Then, he is asked for the password, D2xc9CgD. The password is not shown on the screen; however, we display it below for demonstration purposes.
- Once the system checks his login credentials, he is greeted with a welcome message.
- And the remote server grants him a command prompt, frank@bento:~$. The $ indicates that this is not a root terminal.

- even though telnet gives access to a remote system in almost no time, it is not reliable for remote administration as all data are sent in cleartxt
- able to capture the traffic generated by telnet, can possibly find password


SECURE option is SSH
----------------------------------------------------------------------------------
- HTTP used to transfer webpage
- web browser connect tp webserver and uses http to requst html pages and images among other files and submit forms and uploud many files

HTTP

- comp1 to GET/index.html (request) to server
- server gives index.html
- comp1 request GET /images/logo.jpg to server
- server gives logo.jpg image to comp1
----------------------------------------------------- 
- http sends and recieve data as cleartxt so we can communicate with webserver through telnet or netcat and act as a web browser 
  need to input http related commands instead of web browser doing it for you

discover websever version and how to see a requested page
- First, we connect to port 80 using telnet MACHINE_IP 80.
- Next, we need to type GET /index.html HTTP/1.1 to retrieve the page index.html or GET / HTTP/1.1 to retrieve the default page.
- Finally, you need to provide some value for the host like host: telnet and press the Enter/Return key twice.

- We need an HTTP server (webserver) and an HTTP client (web browser) to use the HTTP protocol. The web server will “serve” a specific set of files to the requesting web browser.

Three popular choices for HTTP servers are:
- Apache	= free service
- Internet Information Services (IIS) 	= closed source software and require paying for license
- nginx		= free service
----------------------------------------------------------
FTP file transfer protocol = made to make the transfer of files between diff computers with differ computers with differ systems efficient
- Ftp also sends and recieves data as cleartxt 
- can use telnet or netcat to communicate with an ftp server nd act as an ftp client 

- We connected to an FTP server using a Telnet client. Since FTP servers listen on port 21 by default, we had to specify to our Telnet client to attempt connection to port 21 instead of the default Telnet port.
- We needed to provide the username with the command USER frank.
- Then, we provided the password with the command PASS D2xc9CgD.
- Because we supplied the correct username and password, we got logged in

STAT = more info 
SYST = system type of target
PASV = switches the mode to passive

2 modes to ftp
- Active: In the active mode, the data is sent over a separate channel originating from the FTP server’s port 20.
- Passive: In the passive mode, the data is sent over a separate channel originating from an FTP client’s port above port number 1023.

command

TYPE A = switched the file transfer mode to ASCII
TYPE I = switched the file transfer mode to binary

cannot transfer file using telnet because ftp created a seperate connection for file transfer

let’s only focus on the fact that the FTP client will initiate a connection to an FTP server, which listens on port 21 by default.
All commands will be sent over the control channel. Once the client requests a file, another TCP connection will be established between them.

- when logging in we get  FTP prompt, ftp>, to execute various FTP commands. We used ls to list the files and learn the file name;
 then, we switched to ascii since it is a text file (not binary).
 Finally, get FILENAME made the client and server establish another channel for file transfer.

FTP servers and FTP clients use the FTP protocol. There are various FTP server software that you can select from if you want to host your FTP file server. Examples of FTP server software include:
- vsftpd
- ProFTPD
- uFTP

For FTP clients, in addition to the console FTP client commonly found on Linux systems, you can use an FTP client with GUI such as FileZilla. Some web browsers also support FTP protocol.
Because FTP sends the login credentials along with the commands and files in cleartext, FTP traffic can be an easy target for attackers.
-----------------------------------------------------------
Without a doubt, email is still one of the most popular online services today.

In reality, email servers can be configured in a variety of ways; for example, you can set up an email system to allow local users to exchange emails with each other without requiring Internet connectivity.

However, we will look at a more general system in which multiple email servers link over the Internet.

Email delivery over the Internet requires the following elements:
1. Mail Submission Agent (MSA)
2. Mail Transfer Agent (MTA)
3. Mail Delivery Agent (MDA)
4. Mail User Agent (MUA)

The typical five steps that an email would take to reach the recipient’s inbox:
- An email message is to be transmitted by a Mail User Agent (MUA), often known as an email client. To send its message, the MUA connects to a Mail Submission Agent (MSA).
- The MSA receives the message and verifies it for abnormalities before sending it to the Mail Transfer Agent (MTA) server, which is often hosted on the same server.
- The email message will be sent to the recipient’s MTA by the MTA. The MTA may also serve as a Mail Submission Agent (MSA).
- In a normal configuration, the MTA server also serves as a Mail Delivery Agent (MDA).
- The receiver will use their email client to get their email from the MDA.

If the preceding stages appear confusing, consider the following analogy:

- You intend to send postal mail (MUA).
- Before your local post office (MTA) accepts the postal mail, the post office staff (MSA) verifies it for any problems.
- The local post office examines the letter destination and forwards it to the appropriate post office (MTA).
- The mail is delivered to the recipient’s mailbox by the post office (MTA) (MDA).
- The recipient (MUA) checks the mailbox on a regular basis for fresh mail. They see the fresh mail and accept it.

Similarly, we must follow a protocol to interact with an HTTP server, and we must rely on email protocols to communicate with an MTA and an MDA. The protocols are as follows:
1. Simple Mail Transfer Protocol (SMTP)
2. Post Office Protocol version 3 (POP3) or Internet Message Access Protocol (IMAP)

Simple Mail Transfer Protocol (SMTP) — It’s being used to communicate to an MTA server. Because SMTP employs cleartext, which means that all commands are delivered without encryption.
- We may use a simple Telnet client to connect to an SMTP server and send a message as an email client (MUA).
- By default, SMTP listens on Port 25.

After helo, we issue mail from:, rcpt to: to indicate the sender and the recipient. When we send our email message, we issue the command data and type our message. We issue <CR><LF>.<CR><LF> (or Enter . Enter to put it in simpler terms). 
The SMTP server now queues the message.
In general, we do not need to memorize SMTP instructions. The above console output is intended to assist show what a typical mail client does when it utilizes SMTP.
----------------------------------------------------------------------------------------------------------------------------------
- post office protocol version 3 (pop3) = is a protocol used to download the email messaegs from a mail delivery agent (MDA) server
- the mail client connects to the pop3 server, authenticates, downloads the new email messages before (optionally) deleting them 


EX:
- First, the user connects to the POP3 server at the POP3 default port 110. Authentication is required to access the email messages; the user authenticates by providing his username and password 
- Using the command STAT, we get the reply +OK 1 179; based on RFC 1939, a positive response to STAT has the format +OK nn mm, where nn is the number of email messages in the inbox, and mm is the size of the inbox in octets (byte).
- The command LIST provided a list of new messages on the server, and RETR 1 retrieved the first message in the list. 

- telnet is enough to authenticate and retrieve an email message
- as the user and pass is sent in clear txt, any third party can steal the credentials by watching the network traffic

In general, your mail client (MUA) will connect to the POP3 server (MDA), authenticate, and download the messages. 
Although the communication using the POP3 protocol will be hidden behind a sleek interface, similar commands will be issued, as shown in the Telnet session above.

Based on the default settings, the mail client deletes the mail message after it downloads it. The default behaviour can be changed from the mail client settings if you wish to download the emails again from another mail client. 
Accessing the same mail account via multiple clients using POP3 is usually not very convenient as one would lose track of read and unread messages. To keep all mailboxes synchronized, we need to consider other protocols, such as IMAP.
----------------------------------------------------------
- imap makes it possible to keep your email synchronized accross muiltiple devices (and clients)
	- if email is read, it will be saved on imap server mda and replicated on laptop when you SYN your inbox
imap = 143

- we use Telnet to connect to the IMAP server’s default port, and then we authenticate using LOGIN username password
- IMAP requires each command to be preceded by a random string to be able to track the reply. So we added c1, then c2, and so on
-  Then we listed our mail folders using LIST "" "*", before checking if we have any new messages in the inbox using EXAMINE INBOX

---------------------------------------------
FTP	21	File Transfer	Cleartext
HTTP	80	Worldwide Web	Cleartext
IMAP	143	Email (MDA)	Cleartext
POP3	110	Email (MDA)	Cleartext
SMTP	25	Email (MTA)	Cleartext
Telnet	23	Remote Access	Cleartext
------------------------------------------
