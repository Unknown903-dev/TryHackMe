protocols and server 2

- Sniffing Attack (Network Packet Capture)
- Man-in-the-Middle (MITM) Attack
- Password Attack (Authentication Attack)
- Vulnerabilities
	- ftp, smtp, pop3, imap 

security triad: Confidentiality, integrity, and availability(CIA)
- confidentiality:	refers to keeping the contents of the communications accessible to the intended parties
- integrity:		is the idea of assuring any data sent is accurate, consistent, and complete when reaching its destination
- availability:		refers to being able to access the service when we need it

intelligence agency = highest priority, confidentiality
online banking 	= highest priority, on integrity of transaction
platform making money serving ads = availability 

network packet capture  = violate confidentiality and leads to the disclosure of info 
 (MITM) = breaks the ystem integrity as it can alter the communicated data 
-------------------------------------------------------------------
A sniffing attack can be conducted using an Ethernet (802.3) network card, provided that the user has proper permissions (root permissions on Linux and administrator privileges on MS Windows). There are many programs available to capture network packets.

- Tcpdump is a free open source command-line interface (CLI) program that has been ported to work on many operating systems.
- Wireshark is a free open source graphical user interface (GUI) program available for several operating systems, including Linux, macOS and MS Windows.
- Tshark is a CLI alternative to Wireshark.

There are several specialized tools for capturing passwords and even complete messages; however, this can still be achieved by Tcpdump and Wireshark with some added effort.

eX: user check email message using pop3 
- use tcpdump to attempt to capture the username and password
- sudo tcpdump port 110 -A   =  requuires access to the network traffic,  wiretap or a switch with port mirroring
- an access the traffic exchanged if we launch a successful Man-in-the-Middle (MITM) attack.
- need sudo as packet capture require root priviledge 
- want to limit num of capture and displayed packets to those exchanged with the pop3 server
- pop3 = port 110, so we use this port to filter out packets 
- display the content of the captured packets in ascii format so add -A
--------------------------------------------------------------------
removed extra packets and got the user and pass

wireshark 
- enter pop in filter 
- we can see a user and passw were captured
---------------------------------------------------
only requirement to succeed is to have access to a system between the two communicating systems 
the mitigation lies in adding an encryption layer on top of any network protocol. In particular, Transport Layer Security (TLS) has been added to HTTP, FTP, SMTP, POP3, IMAP and many others. For remote access, Telnet has been replaced by the secure alternative Secure Shell (SSH).

MITM (man in the middle) = occurs when a victim A believe they are communicating with real location B, but is interacting with an attacker E

ex: we have A requesting the transfer of $20 to M, but E altered this message and replaced the original value with a new one
	B recieves the modified message and act on it 

- simple to carry out if the two parties do not confirm authenticity and integrity of each message
- there are times where the chosen protocol does not provide secure authentication or integrity checking, protocols have inherent insecurities that make them susceptible to this kind of attack 

http = are susceptible to a mitm attack, ccant recognize it = can use Ettercap and Bettercap for aid

- mitm = can affect other cleartxt protocol such as FTP, SMTP, and pop3
- mitigation against this attaack requires cryptography 
- the soluton lies in proper authentication and encryption or signing of the exchanged messages
- With the help of Public Key Infrastructure (PKI) and trusted root certificates, Transport Layer Security (TLS) protects from MITM attacks.
----------------------------------------------------------
how to protect the confidentiality and integrity of the EXHANGED PACKETS

- can add encryption to our protocol via presentation layer
- Application layer  = HTTP, FTP, SMTP, POP3, IMAP, etc = clear txt
- presentation layer = SSL, TTL
- Transport Layer    = TCP, UDP
- network layer      = IPv4, IPv6

- TLS  is more secure than SSL
- we can use TLS to upgrade HTTP,FTP, SMTP,POP3 and IMAP, which present clear txt

	default         default with TLS
HTTP	80	HTTPS	443
FTP	21	FTPS	990
SMTP	25	SMTPS	465
POP3	110	POP3S	995
IMAP	143	IMAPS	993

HTTP, to retrieve a web page over http 
- Establish a TCP connection with the remote web server
- Send HTTP requests to the web server, such as GET and POST requests.

https, steps to encrypt the traffic 
- Establish a TCP connection
- Establish SSL/TLS connection
- Send HTTP requests to the webserver

To establish an SSL/TLS connection, the client needs to perform the proper handshake with the server. Based on RFC 6101, the SSL connection

The terms might look complicated depending on your knowledge of cryptography, but we can simplify the four steps as:

- The client sends a ClientHello to the server to indicate its capabilities, such as supported algorithms.
- The server responds with a ServerHello, indicating the selected connection parameters. The server provides its certificate if server authentication is required. The certificate is a digital file to identify itself; it is usually digitally signed by a third party. Moreover, it might send additional information necessary to generate the master key, in its ServerKeyExchange message, before sending the ServerHelloDone message to indicate that it is done with the negotiation.
- The client responds with a ClientKeyExchange, which contains additional information required to generate the master key. Furthermore, it switches to use encryption and informs the server using the ChangeCipherSpec message.
- The server switches to use encryption as well and informs the client in the ChangeCipherSpec message.

- A client was able to agree on a secret key with a server that has a public certificate. This secret key was securely generated so that a third party monitoring the channel wouldn’t be able to discover it. Further communication between the client and the server will be encrypted using the generated key.
- once an SSL/TLS handshake has been established, HTTP requests and exchanged data won’t be accessible to anyone watching the communication channel
- As a final note, for SSL/TLS to be effective, especially when browsing the web over HTTPS, we rely on public certificates signed by certificate authorities trusted by our systems
  this prevents MITM attack 
---------------------------------------------------------------------
ssh = is meant for secure way for remote system administration 
	securely connect to another system over the network and execute commands on remote system

- You can confirm the identity of the remote server
- Exchanged messages are encrypted and can only be decrypted by the intended recipient
- Both sides can detect any modification in the messages

ensured by cryptography = part of confidentiality and integrity, possible through use of differ encryption algorithm 

use ssh = need ssh server = ssh client

ssh = default port 22
authenticate 
- user & passw
- private and public key (when ssh server is config)

linux, macOS and MS Windows build after 2018 = can connect to ssh server
############################
ssh user_name@IP_address
###############################
- Note that if this is the first time we connect to this system, we will need to confirm the fingerprint of the SSH server’s public key to avoid man-in-the-middle (MITM) attacks
  need to check to see if pubkic key is valid manually

transfer file = scp under ssh protocol 
###################################
scp mark@MACHINE_IP:/home/mark/archive.tar.gz ~
###############################################
- copies the file = archive.tar.gz
- locate on /home/mark directory to ~ root of home directory of current logged in user

############################################
scp backup.tar.bz2 mark@MACHINE_IP:/home/mark/
################################################
- copies the file backup.tar.bz2 
- from local system to directory /home/mark/ on remote system 

 FTP could be secured using SSL/TLS by using the FTPS protocol which uses port 990.
 It is worth mentioning that FTP can also be secured using the SSH protocol which is the SFTP protocol. By default this service listens on port 22, just like SSH.
------------------------------------------------------
Authentication, or proving your identity, can be achieved through one of the following, or a combination of two:

- Something you know, such as password and PIN code.
- Something you have, such as a SIM card, RFID card, and USB dongle.
- Something you are, such as fingerprint and iris.

Attacks against passwords are usually carried out by:

- Password Guessing: Guessing a password requires some knowledge of the target, such as their pet’s name and birth year.
- Dictionary Attack: This approach expands on password guessing and attempts to include all valid words in a dictionary or a wordlist.
- Brute Force Attack: This attack is the most exhaustive and time-consuming where an attacker can go as far as trying all possible character combinations, which grows fast (exponential growth with the number of characters).

- We want an automated way to try the common passwords or the entries from a word list; here comes THC Hydra. 
- Hydra supports many protocols, including FTP, POP3, IMAP, SMTP, SSH, and all methods related to HTTP.
################################################################################3
-  general command-line syntax is: hydra -l username -P wordlist.txt server service
specify the options
-	-l username: -l should precede the username, i.e. the login name of the target.
-	-P wordlist.txt: -P precedes the wordlist.txt file, which is a text file containing the list of passwords you want to try with the provided username.
-	server is the hostname or IP address of the target server.
-	service indicates the service which you are trying to launch the dictionary attack.


- hydra -l mark -P /usr/share/wordlists/rockyou.txt MACHINE_IP ftp will use mark as the username as it iterates over the provided passwords against the FTP server.
- hydra -l mark -P /usr/share/wordlists/rockyou.txt ftp://MACHINE_IP is identical to the previous example. MACHINE_IP ftp is the same as ftp://MACHINE_IP.
- hydra -l frank -P /usr/share/wordlists/rockyou.txt MACHINE_IP ssh will use frank as the user name as it tries to login via SSH using the different passwords.

here are some extra optional arguments that you can add:
	-s PORT to specify a non-default port for the service in question.
	-V or -vV, for verbose, makes Hydra show the username and password combinations that are being tried. This verbosity is very convenient to see the progress, especially if you are still not confident of your command-line syntax.
	-t n where n is the number of parallel connections to the target. -t 16 will create 16 threads used to connect to the target.
	-d, for debugging, to get more detailed information about what’s going on. The debugging output can save you much frustration; for instance, if Hydra tries to connect to a closed port and timing out, -d will reveal this right away.

Mitigation against such attacks can be sophisticated and depends on the target system. A few of the approaches include:

- Password Policy: Enforces minimum complexity constraints on the passwords set by the user.
- Account Lockout: Locks the account after a certain number of failed attempts.
-  Throttling Authentication Attempts: Delays the response to a login attempt. A couple of seconds of delay is tolerable for someone who knows the password, but they can severely hinder automated tools.
- Using CAPTCHA: Requires solving a question difficult for machines. It works well if the login page is via a graphical user interface (GUI). (Note that CAPTCHA stands for Completely Automated Public Turing test to tell Computers and Humans Apart.)
- Requiring the use of a public certificate for authentication. This approach works well with SSH, for instance.
- Two-Factor Authentication: Ask the user to provide a code available via other means, such as email, smartphone app or SMS.
- There are many other approaches that are more sophisticated or might require some established knowledge about the user, such as IP-based geolocation.

excellent approach to protect against password attacks.




Protocol	TCP Port	Application(s)	Data Security
FTP	21	File Transfer	Cleartext
FTPS	990	File Transfer	Encrypted
HTTP	80	Worldwide Web	Cleartext
HTTPS	443	Worldwide Web	Encrypted
IMAP	143	Email (MDA)	Cleartext
IMAPS	993	Email (MDA)	Encrypted
POP3	110	Email (MDA)	Cleartext
POP3S	995	Email (MDA)	Encrypted
SFTP	22	File Transfer	Encrypted
SSH	22	Remote Access and File Transfer	Encrypted
SMTP	25	Email (MTA)	Cleartext
SMTPS	465	Email (MTA)	Encrypted
Telnet	23	Remote Access	Cleartext

Hydra remains a very efficient tool that you can launch from the terminal to try the different passwords. We summarize its main options in the following table.

Option	Explanation
	-l username	Provide the login name
	-P WordList.txt	Specify the password list to use
	server service	Set the server address and service to attack
	-s PORT	Use in case of non-default service port number
	-V or -vV	Show the username and password combinations being tried
	-d	Display debugging output if the verbose output is not helping