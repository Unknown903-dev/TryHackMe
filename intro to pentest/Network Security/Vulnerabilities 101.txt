vulnerability = weakness or flaw design, implementation or behaviours of a system or application 

NIST defines a vulnerability as “weakness in an information system, system security procedures, internal controls, or implementation that could be exploited or triggered by a threat source

Vulnerabilities
---------------------------------------------------------------------------
Operating System		= These types of vulnerabilities are found within Operating Systems (OSs) and often result in privilege escalation.
(Mis)Configuration-based	= These types of vulnerability stem from an incorrectly configured application or service. For example, a website exposing customer details.
Weak or Default Credentials	= Applications and services that have an element of authentication will come with default credentials when installed. For example, an administrator dashboard may have the username and password of "admin". These are easy to guess by an attacker. 
Application Logic		= These vulnerabilities are a result of poorly designed applications. For example, poorly implemented authentication mechanisms that may result in an attacker being able to impersonate a user.
Human-Factor			= Human-Factor vulnerabilities are vulnerabilities that leverage human behaviour. For example, phishing emails are designed to trick humans into believing they are legitimate.
-----------------------------------------------------------------------------------
Vulnerability managment = procces of evaluating, categorising anf remediating threats for orgs
vulnerability scoring = determmine the potential risk and impact a vulnerability may have on a network or computer system

EX: CVSS = award poinits to a vulnerability based upon its features, availabilty, and reproducibility

a score is essentially determined by some of the following factors (but many more):

  1. How easy is it to exploit the vulnerability?

  2. Do exploits exist for this?

  3. How does this vulnerability interfere with the CIA triad?

----------------------------------------------------------------
CVSS has been around for a long time.		CVSS was never designed to help prioritise vulnerabilities, instead, just assign a value of severity.
CVSS is popular in organisations.		CVSS heavily assesses vulnerabilities on an exploit being available. However, only 20% of all vulnerabilities have an exploit available (Tenable., 2020) .
CVSS is a free framework to adopt and 		Vulnerabilities rarely change scoring after assessment despite the fact that new developments such as exploits may be found.
recommended by organisations such as NIST.	
-------------------------------------------------------------------------------
VPR = Vulnerability priority rating 

- This framework is considered to be risk-driven; meaning that vulnerabilities are given a score with a heavy focus on the risk a vulnerability poses to the organisation itself, rather than factors such as impact (like with CVSS).

VPR is a modern framework that is real-world.			VPR is not open-source like some other vulnerability management frameworks.
VPR considers over 150 factors when calculating risk.		VPR can only be adopted apart of a commercial platform.
VPR is risk-driven and used by organisations to help 		VPR does not consider the CIA triad to the extent that CVSS does; meaning that risk to the confidentiality, integrity and availability of data does not play a large factor in scoring vulnerabilities when using VPR.
prioritise patching vulnerabilities.	

Scorings are not final and are very dynamic, meaning the priority a vulnerability should be given can change as the vulnerability ages.	Intentionally left blank.
---------------------------------------------------------------------------------------------------------------------------------------------
showcase two databases that we can use to look up existing vulnerabilities for applications discovered in our infosec journey, specifically the following website
-  NVD (National Vulnerability Database)
-  Exploit-DB

Vulnerability		= A vulnerability is defined as a weakness or flaw in the design, implementation or behaviours of a system or application.
Exploit			= An exploit is something such as an action or behaviour that utilises a vulnerability on a system or application.
Proof of Concept (PoC)	= A PoC is a technique or tool that often demonstrates the exploitation of a vulnerability.
-------------------------------------
NVD – National Vulnerability Database

- CVE = common vulnerabilities and exposure
- CVE-YEAR-IDNUMBER. For example, the vulnerability that the famous malware WannaCry used was CVE-2017-0144
- website is good for seeing new vulnerabilities

Exploit DB

- Exploit-DB retains exploits for software and applications stored under the name, author and version of the software or application
- We can use Exploit-DB to look for snippets of code (known as Proof of Concepts) that are used to exploit a specific vulnerability.
------------------------------------------
1. gather info
2. enumeration and scanning
 - The Sr. Penetration tester now moves onto the enumeration and scanning stage of the engagement. This stage helps establish services and applications running on ACKme's infrastructure.
 - We can use the information gathered from this scan to begin to understand what services may be viable to attack. For example, a webserver hosting a website.
 - Recall from our Email, we are given one IP address 240.228.189.136. Try scanning this IP address yourself...
	nmap ip_address
3. Application testing
 - Using the information gathered from stage two of the penetration engagement. The Jr. Penetration tester has visited the target in their web browser and has been greeted with a login page.
 - The Sr. Penetration tester guesses some random passwords such as 'admin' and 'admin' to no avail. They notice a version number of the application 1.5.2 and takes a note of this. This will be useful for the next stage.
4. Vulnerability Research
 - The Sr. Penetration tester recalls that ACKme IT Services uses an application called ACKme Portal that has a version number of 1.5.2. The Sr. Penetration Tester visits a vulnerability & exploit database called 'Vulnerability Bank™'.
 - This website stores details of vulnerabilities and exploits for applications. The Sr. Penetration Tester searches this site for the software that was discovered in stage three. They're in luck! There is one vulnerability listed for that application & version: Remote Code Execution (RCE).
 - RCE vulnerability allows commands to be executed on the target's system. The Sr. Penetration Tester could use this vulnerability to gain access to the console of the target. Try searching Vulnerability Bank™️ for an exploit for ACKMe Portal 1.5.2 and
5. Exploitation
 - Accumulating the information from all the previous stages, the Sr. Penetration Tester uses the exploit downloaded from Vulnerability Bank™️ against ACKme's web application on 240.228.189.13.
 - The exploit is successful and abuses the Remote Code Execution (RCE) vulnerability to launch a reverse shell on ACKme's infrastructure.
 - From here, the Sr. Penetration tester can look for files of value such as passwords, backups or application source code
6. 



