Command injection = the abuse of an application behavior to execute commands on the operating system
			using same privileges an application on a device is running
Known as = Remote Code Execution (RCE) = remotely execute code in an application

EX:
successful command injection on web server running as user names joe
execute commands under user joe
get permissions that joe has
--------------------
vulnerability exist due to languages like PHP,Python,Nodejs to pass data
to and to make system calls on the machine operating system
EX:
taking input from field and searching for entry in file
-----
$title = takes data that a user enters in a input field to search a directory 
-----
An attacker could abuse this application by injecting their own commands for the 
application to execute. Rather than using grep to search for an entry in songtitle.txt, they could ask the application to read data from a more sensitive file.

abusing application this way is always possible no matter the language the application uses
as long as the application processes and  execute it, it can result in command injection
-----------
Application that use user input to populate system commands with data can often be combined in unintended behaviour 
Shell operator:  ";" and  "&"  "&&"  will combine 2 or more system commands and execute them both
- visit linux fundamentals for more info

How to detect Command Injection (CI)
- Blind CI =    This type of injection is where there is no direct output from the application when testing payloads.
	      You will have to investigate the behaviours of the application to determine whether or not your payload was successful.
- Verbose CI = This type of injection is where there is direct feedback from the application once you have tested a payload. 
	       For example, running the whoami command to see what user the application is running under. The web application will output the username on the page directly.
-------------------------------
Detecting Blind CI  = (output is not visible)
- need to use payloads that will cause time delay
	EX: ping & sleep = ping will have application to hang for x seconds
- we can force some output by using redirection operators like: ">"
  can tell application to execute commands whoami and redirect to file, and cat to read file 
- can use curl = to deliver data to and from an application in payload
	EX: curl http://vulnerable.app/process.php%3Fsearch%3DThe%20Beatles%3B%20whoami
--------------------------------------------
Detecting Verbose CI = easiest method, gives you feedback or output what is happening,
		EX: ping/whoami directly displayed
USEFUL PAYLOADS
- linux
 	- ls
	- ping
	- sleep = This is another useful payload in testing an application for blind command injection, where the machine does not have ping installed.
	- nc = Netcat can be used to spawn a reverse shell onto the vulnerable application. You can use this foothold to navigate around the target machine for other services, files, or potential means of escalating privileges.
- Windows
	- whoami	
	- dir = List the contents of the current directory. You may be able to find files such as configuration files, environment files (tokens and application keys), and many more valuable things.
	- ping = This command will invoke the application to hang. This will be useful in testing an application for blind command injection.
	- timeout = This command will also invoke the application to hang. It is also useful for testing an application for blind command injection if the ping command is not installed.
--------------------------------------------
Command injection preventions
- minimal use of potential dangerous functions
- libraries in a programming language to filter input without relying on user input

Vulnerable Functions
php many functions interact with operating system to execute commands via shells 

- Exec
- Passthru 
- system

the application will only accept and process numbers that are inputted into the form 
commands such as whoami wont go through
---------	
<input type="text" id="ping" name="ping" pattern="[0-9]+"></input>	1.only accepts a specific pttern of charact 0-9
<?php
echo passthru("/bin/ping -c 4 "$_GET["ping"].');			2.only proceed to execute this data which are numerical
?>
----------------------
function = take input like string or user data and will execute what is on the system
applications that use the function without proper checks will be vulnerable to COMMAND INJECTIONS


Input sanitisation
This is a process of specifying the formats or types of data that a user can submit. 
For example, an input field that only accepts numerical data or removes any special characters such as > ,  & and /.

filter_input PHP function is used to check whether or not any data submitted via an input form is a number or not. If it is not a number, it must be invalid input.
----------
<?php
if(!filter_input(INPUT_GET, "number", FILTER_VALIDATE_NUMBER)) {
}
----------

Bypassing filters
applications will employ numerouse techniques in filtering and sanitising data that is taken from users input
these filters will restrict you from specific payloads, we can abuse this
EX:
strip out quotation marks = can use hexadecimal value

$payload = "\x2f\x65\x74\x63\x2f\x70\x61\x73\x73\x77\x63"
---------------------------

in the task we expirmented and check whether the victim is using linux or windows
we found out that it used winows using 

& dir = which revealed that is vulnerable

with this info we can run whoami to see who the user is
we can also use cat to reveal the flag
--------------------------------------------------






























